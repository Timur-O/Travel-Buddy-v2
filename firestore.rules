rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin;
    }

    match /countries/{countryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /groups/{groupId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /userData/{document=**} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }

    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if request.auth.uid == userId || isAdmin();
    }

    match /itineraries/{itineraryId} {
      allow create: if isAuthenticated() && request.resource.data.ownerId == request.auth.uid;
      allow read, update, delete: if isAuthenticated() && resource.data.ownerId == request.auth.uid;

        match /items/{itemId} {
          allow create: if isAuthenticated() && get(/databases/$(database)/documents/itineraries/$(itineraryId)).data.ownerId == request.auth.uid;
          allow read, update, delete: if isAuthenticated() && get(/databases/$(database)/documents/itineraries/$(itineraryId)).data.ownerId == request.auth.uid;
        }
    }

  }
}
